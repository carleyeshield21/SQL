--**Query Principles by Order
--select
--from
--where
--group by
--having
--order by

--*Creating Tables in SSMS
--create table SportTeams
--(TeamID int,TeamName ntext,Attack int,Defense int)
--insert into SportTeams (TeamID,TeamName,Attack,Defense)
--values(23,'Wolf FC',2,3)

--To display a column name to a different name
--select teamid as id,teamname as name from SportTeams; 

--*Deleting contents from columns
--select * from SportTeams
--delete from SportTeams
--select * from SportTeams

--*delete table from SSMS
--drop table SportTeams

--*Sample Queries
--declare @karakter as varchar(3);
--set @karakter = 'hilaw';
--select @karakter
--select LEN(@karakter) as 'haba', DATALENGTH(@karakter) as 'dita'

--DECLARE @myvariable NVARCHAR(20) = N'hello'
--select LEN(@myvariable), DATALENGTH(@myvariable) as 'baba'

--select right(@myvariable,2), LEFT(@myvariable,2)
--select SUBSTRING(@myvariable,3,3)

--declare @myvar varchar(10) = 'HELLO'
--select substring(@myvar,3,2)
--select substring(@myvar,2,2)
--select left(@myvar,2)
--select substring(@myvar,2,3)

--declare @pers_name nvarchar(20);
--declare @medel_name nvarchar(20);
--declare @lust_name nvarchar(20);
--declare @fool_name nvarchar(20);

--set @pers_name = 'Sarat';
--set @medel_name = 'JuicyKa';
--set @lust_name = 'Farker';

--select iif(@medel_name IS NULL,'waray medel name')
--set @fool_name = @pers_name+IIF(@medel_name IS NULL,' ',@medel_name)+@lust_name
--select @fool_name as pullname

--DECLARE @mychar1 as NVARCHAR(10) = N'hello'
--DECLARE @mychar2 as NVARCHAR(10)
--SELECT LEFT(@mychar1 + @mychar2, 2)

--select 'String ito' + 45
--select 'String ito ' + CONVERT(varchar(10),15233)
--select 'String ito ' + cast(15233 as varchar(10))

--select 'Eto na lang natira sa sahod ko ' + FORMAT(0,'c')
--select 'Eto na lang natira sa sahod ko ' + FORMAT(0,'c','en-GB')
--select 'Eto na lang natira sa sahod ko ' + FORMAT(0,'c','fr-FR')
--select 'Eto na lang natira sa sahod ko ' + FORMAT(0,'c','ph-PH')
--SELECT FORMAT(2345.6,'C')

--*Selecting all last names' first letter, giving it a column header, counting the frequencies of each letter and ordering it, we can add the function 'asc' for ascending or 'desc' for descending order
--select LEFT(EmployeeLastName,1) as PersLetter, count(*) as bilang
--from [70-461datau]
--group by LEFT(EmployeeLastName,1) order by PersLetter

--*Ordering by count, can also add the function asc or desc (ascending by default)
--select LEFT(EmployeeLastName,1) as PersLetter, count(*) as bilang
--from [70-461datau]
--group by LEFT(EmployeeLastName,1) order by count(*)

--*Using the function 'top' to obtain the top rows desired
--select top(10) LEFT(EmployeeLastName,1) as PersLetter, count(*) as bilang
--from [70-461datau]
--group by LEFT(EmployeeLastName,1) order by count(*)

--*Using the function 'having' to retrieve top 10 columns which only have 50 or more frequencies, we can still use the functions asc or desc at the end of the query
--select top(10) LEFT(EmployeeLastName,1) as PersLetter, count(*) as bilang
--from [70-461datau]
--group by LEFT(EmployeeLastName,1)
--having COUNT(*)>=50
--order by count(*)

--select * from [dbo].[70-461datau]
--select LEFT(EmployeeLastName,1) as PersLetter, count(*) as bilang
--from [70-461datau]
--where DateOfBirth > '19860101'
--group by LEFT(EmployeeLastName,1)
--having COUNT(*)>=20
--order by count(*)

--*Using the function 'where' by date
--select LEFT(EmployeeLastName,1) as PersLetter, count(*) as bilang
--from [70-461datau]
--where DateOfBirth > '19860101'
--group by LEFT(EmployeeLastName,1)
--having COUNT(*)>=20
--order by count(*)

--*Using where function for date
--select EmployeeLastName, count(*) as bilang
--from [70-461datau]
--where DateOfBirth < '19860101'
--group by EmployeeLastName
--having COUNT(*)>=1
--order by count(*)

--*Using 'where' function with additional conditions
--select EmployeeLastName, count(*) as bilang
--from [70-461datau]
--where DateOfBirth < '19860101' and EmployeeLastName = 'Abbas' or EmployeeLastName = 'Choi'
--group by EmployeeLastName
--having COUNT(*)>=1
--order by count(*)

--*Reducing rows further from SportTeams
--SELECT top(2) Attack, COUNT(*) AS NumberOfRows
--FROM SportTeams
--group by Attack order by COUNT(*) desc;

--*Reducing the number of rows, so it only returns those rows where NumberOfRows is 4 or greater.
--SELECT Attack, COUNT(*) AS NumberOfRows
--FROM SportTeams
--GROUP BY Attack
--having COUNT(*) >= 4
--ORDER BY NumberOfRows
--DESC, Attack;